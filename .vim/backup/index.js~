var express = require('express');
var app = express();
var argv = require('yargs').argv;
var bodyParser = require('body-parser');
var q = require('./queue');

// configure app to use bodyParser()
// this will let us get the data from a POST
app.use(bodyParser.urlencoded({ extended: true }));
app.use(bodyParser.json({ limit: '5mb' }));

// root url
app.get('/', function (req, res) {
    res.json({ "message" : "Welcome to the dualbox builder API !" });
})

app.post('/build/', function(req, res) {
    var task = {
        app : JSON.parse(req.body.app)
    }

    // copy request headers to response
    var expectedHeaders = ["buildid", "appname", "appversion", "notifyurl", "debug", "profiler", "loglevel"];
    for(var i=0; i<expectedHeaders.length; i++) {
        var h = expectedHeaders[i];
        var header = req.headers[h];
        if( header === undefined ) {
            res.statusCode = 400;
            res.end("A build request should have a header " + h + "\n\n");
            return;
        }
        else {
            res.setHeader(h, header);
            task[h] = header;
            console.log("set " + h + " to " + header);
        }
    }

    var app = JSON.parse(req.body.app);
    console.log("Enqueued task: buildid=%s, app=%s, version=%s debug=%s, profiler=%s, loglevel=%s, notifyurl=%s",
        task.buildid, task.appname, task.appversion, task.debug, task.profiler, task.loglevel, task.notifyurl);

    q(task).then(function onDone(task) {
        console.log("Task %s completed !", task.buildid);
    }, function onError(task) {
        console.err("Task %d couldn't finish: %s", task.buildid, task.err);
    });

    // return status in queue
    res.send(JSON.stringify({ "status" : "in queue" }));
});

// start server
var server = app.listen(argv.port || "8080", function () {
    var host = argv.host || "0.0.0.0";
    var port = server.address().port;

    console.log("Dualbox build server listening at http://%s:%s", host, port);
})
