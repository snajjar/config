var description = require('./package.json');
var DualBox = require('@dualbox/dualbox');

var File = require('@dualbox/dualbox-type-file');

var JSZip = require('@dualbox/dualbox-lib-jszip');

/**
 *  A simple parsing module for dualbox
 *  @constructor
 *  @extends {DualBox.Module}
 */
var ZipFile = function(attrs){
    DualBox.Module.call(this, description, attrs);
    this.setParallel(false);
};

ZipFile.prototype = Object.create(DualBox.Module.prototype);
ZipFile.prototype.constructor = ZipFile;

// [Abstract] See DualBox.Module
ZipFile.prototype.compute = function(input, response){
    this.debug( "Computing output of ZipFile" );

    var zip = new JSZip();

    var f = input.file;
    var name = f.getName() + "." + f.getExtension();
    zip.file(name,f.toArrayBuffer());
    zip.generateAsync({type : "arraybuffer", compression: "DEFLATE"}).then(function(ab){
        var zfile = new File(ab, "zip", input.filename ? input.filename : input.file.getName());

        var output = {
            file:zfile
        };
        response.send(output);
    });
};

module.exports = ZipFile;
