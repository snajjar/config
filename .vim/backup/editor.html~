<!doctype html>
<html>
    <head>
        <meta charset="utf-8">
        <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
        <meta name="viewport" content="width=device-width">
        <script src="../lib/jquery.min.js"></script>
        <script src="../lib/jquery.autocomplete.min.js"></script>
        <script src="../lib/popper.min.js"></script>
        <link rel="stylesheet" href="../css/plumb.css">

        <!-- Bootstrap -->
        <link href="../lib/bootstrap-4.0.0-dist/css/bootstrap.min.css" rel="stylesheet">
        <script src="../lib/bootstrap-4.0.0-dist/js/bootstrap.min.js"></script>

        <!-- Font awesome -->
        <link href="../lib/fontawesome-free-5.0.6/web-fonts-with-css/css/fontawesome-all.min.css" rel="stylesheet">

        <!-- lodash -->
        <script src="../lib/lodash.js"></script>

        <!-- fuse search -->
        <script src="../lib/fuse.min.js"></script>

        <!-- Vue.js -->
        <script src="https://cdn.jsdelivr.net/npm/vue@2.6.10/dist/vue.js"></script>

        <style>
            .html, body {
                margin: 0;padding: 0;
            }
        </style>
    </head>

    <body id="superbody" bgcolor="#e3e4e6" style="height: 100vh;">
        <div id="editor" style="width: 100%; height: 100vh;"></div>

        <!--
        <script src="../js2/dist/DefaultHTMLFormat.js"></script>
        <script src="../js2/dist/GraphEditor.js"></script>
        <script src="../js2/dist/EditorUtils.js"></script>
        <script src="../js2/dist/EditorHTMLInterface.js"></script>
        <script src="../js2/dist/plumb.js"></script>
        -->

        <!--<script src="../lib/jsPlumb-2.1.8.js"></script> -->
        <script src="../js/dist/GraphEditor.js"></script>
        <script src="../require/index.js"></script>
        <script>
            // Useful for require.js to work
            var sources = {};
            var addSource = function(path, cb) {
                sources[path] = { ready: false, cb : cb };
                var s = document.createElement('script');
                s.setAttribute('src', path);
                s.setAttribute('charset', 'utf-8');
                s.onload = function() {
                    sources[path].ready = true;

                    // check if all our sources are ready
                    var keys = Object.keys(sources);
                    for(var i=0; i<keys.length; i++) {
                        var s = sources[keys[i]];
                        if( !s.ready ) return false;
                    }

                    // we're here if all sources are ready
                    for(var i=0; i<keys.length; i++) {
                        var s = sources[keys[i]];
                        if( s.cb ) s.cb();
                    }
                };
                document.body.appendChild(s);
            };
        </script>
        <script src="../require/require.js"></script>

        <script>
            var packages = _.map(pkgIndex, function(o) { return o.pkg });

            window.editor = new DualboxEditor($('#editor'), {
                showLoadButton : true,
                showSaveButton : true,

                search : function(text, cb) {
                    var options = {
                        shouldSort: true,
                        threshold: 0.6,
                        location: 0,
                        distance: 100,
                        maxPatternLength: 32,
                        minMatchCharLength: 1,
                        tokenize:true,
                        matchAllTokens:true,
                        keys: [
                          "name",
                          "description"
                        ]
                    };
                    var fuse = new Fuse(packages, options); // "list" is the item array
                    var result = fuse.search(text);
                    cb(null, result);
                },

                find : function( name, version, cb ) {
                    // We don't handle version here, only the latest
                    if( !pkgIndex[name] ) {
                        cb('No package with name ' + name + ' found!', null);
                    }
                    else {
                        cb(null, pkgIndex[name].pkg);
                    }
                }
            });

            // For debug purpose
            window.getApp = function(){
                return window.editor.v.appManager.app;
            };
        </script>
    </body>

</html>

