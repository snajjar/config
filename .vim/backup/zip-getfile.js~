var DualBox = require('@dualbox/dualbox');
var description = require('./package.json');

var JSZip = require('jszip');

/**
 *  Module to get the file content in a zip.
 *  This module is smart and will return :
 *  @constructor
 *  @extends {DualBox.Module}
 */
var ZipGetFile = function(attrs){
    DualBox.Module.call(this, description, attrs);

    this.interruption = false;
};
ZipGetFile.prototype = Object.create(DualBox.Module.prototype);
ZipGetFile.prototype.constructor = ZipGetFile;

ZipGetFile.prototype.stop = function() {
    this.interruption = true;
}

// [Abstract] See DualBox.Module
ZipGetFile.prototype.compute = function(input, response){
    this.debug( "Computing output of ZipGetFile" );

    var that = this;
    this.interruption = false;
    JSZip.loadAsync(input.zip).then(
        function (zip) {
            var fn = input.filename;
            if(fn === null){
                // Filename is optional is the zip contains only 1 file,
                // get this file.
                zip.forEach(function (relativePath, file){
                    fn = relativePath;
                });
            }
            var f = zip.file(fn);
            var fext = fn.split('.').pop();
            f.async("nodebuffer").then(function(data){
                var output = {
                    buff : data
                };

                response.send(output);
            });
        }
    ).catch(
        function(reason) {
            that.error('Cannot read zip file ('+ input.filename+ ') : Zip load has been rejected : '+reason+'.');
        }
    );
};

module.exports = ZipGetFile;

