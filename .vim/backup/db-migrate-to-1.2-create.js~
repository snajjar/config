//var url = "mongodb://meteor:web1meteor@cockney.5.mongolayer.com:10176,cockney.4.mongolayer.com:10176/production?replicaSet=set-5710b3406c18212b4100056c&connectTimeoutMS=300000&readPreference=primaryPreferred"
var url = "mongodb://127.0.0.1:3001/meteor";
var dbname = "production";
var firstTime = true;


var _ = require('lodash');
require("./db-utils.js");


(async function()
{
    var db = null;
    try
    {
        console.log('Connecting to ' + url);
        db = await dbConnect(url);
        var dbo = db.db(dbname);

//--------------------------------------------------------------------------------------------------------
        if(firstTime == false)
        {
			var collectionsNames  = await listCollections(dbo);
             safeDropCollection(dbo,collectionsNames,'Products');
             safeDropCollection(dbo,collectionsNames,'Carts');
             safeDropCollection(dbo,collectionsNames,'Countries');
             safeDropCollection(dbo,collectionsNames,'Articles');
             var insolesOrdersCollection = await getCollection(dbo,'InsolesOrders');
             await updateMany(insolesOrdersCollection,{'migrated':true},{$set:{'migrated': false}});
        }
		else
		{			
			try
			{
			var articles = await getCollection(dbo,'Articles');
			if(articles!=null)
				await renameCollection(articles, 'HomeArticles');
			}
			catch(ex)
			{
                console.log(ex);
			}
		}
//--------------------------------------------------------------------------------------------------------
        console.log('Create base data');



        var articles = await createCollection(dbo,'Articles');
        var countries = await createCollection(dbo,'Countries');
        var carts = await createCollection(dbo,'Carts');
        var products = await createCollection(dbo,'Products');
        var consultations = await getCollection(dbo,'Consultations');
        var coversCollection= await getCollection(dbo,'Covers');
        var covers = await find(coversCollection,{});
        var articles =  await getCollection(dbo,'Articles');
		var addresses =  await getCollection(dbo,'Addresses');
		var users =  await getCollection(dbo,'users');
		var finalInsoles =  await getCollection(dbo,'FinalInsoles');

        var count= await find(countries,{});
       // console.log(require('util').inspect(fr));
        var defaultCountry=null;

        if(count.length==0)
        {
            console.log('create countries')
            defaultCountry = await insert(countries,{
                _id : generateId(),
                name: 'France',
                code: 'FR',        
                performanceTotalWeeks: 10,
                performanceBestWeeks: 6,
                insoles3DPlusLevel2:50,
                insoles3DPlusLevel3:45,
                podoclicAndPCSellPrice:1990,
                podoclicAndPCRentalPrice:150,
                welcomeOfferPrice:35,
            });
            countries.insert({
                _id : generateId(),
                name: 'United Kingdom',
                code: 'GB',        
                performanceTotalWeeks: 10,
                performanceBestWeeks: 6,   
                insoles3DPlusLevel2:50,
                insoles3DPlusLevel3:45,
                podoclicAndPCSellPrice:1990,
                podoclicAndPCRentalPrice:150,
                welcomeOfferPrice:35,
            });
            countries.insert({
                _id : generateId(),
                name: 'España',
                code: 'ES',        
                performanceTotalWeeks: 10,
                performanceBestWeeks: 6,  
                insoles3DPlusLevel2:50,
                insoles3DPlusLevel3:45, 
                podoclicAndPCSellPrice:1990,
                podoclicAndPCRentalPrice:150,
                welcomeOfferPrice:35,
            });
        }
        else
        {
            defaultCountry = await findOne(countries,{code:'FR'});
        }

        var  deliveryProduct = null;
        var  insoleKidsProduct = null;
        var  insole3DProduct = null;
        var  insole3DPlusProduct = null;
        var  stickProduct = null;

        count= await find(products,{});
        if(count.length!=0)
        {
            console.log("Retrieving default items descriptions");
            deliveryProduct = await findOne(products,{name: "Livraison", countryCode:'FR'});
            insoleKidsProduct = await findOne(products,{name: "Semelles Enfant", countryCode:'FR'});
            insole3DProduct = await findOne(products,{name: "Semelles 3D", countryCode:'FR'});
            insole3DPlusProduct = await findOne(products,{name: "Semelles 3D+", countryCode:'FR'});
            stickProduct = await findOne(products,{name: "Encollage", countryCode:'FR'});
        }
        else
        {        

            console.log("Creating default items descriptions");

            deliveryProduct = await insert(products,{
                _id : generateId(),
                countryCode : defaultCountry.code,
                displayName: "Livraison",
                parentType:'delivery',
                type:"delivery",
                name:'Livraison',
                description:'Livraison',                
                pictureId:null,
                currency:'euro',
                unitPriceVATIncl:9,
                VATPercentage:0.2,
                details:{
                    deliveryDays: 5,
                },
                available:true,
                userProfile:'all',
            });
            insoleKidsProduct = await insert(products,{
                _id : generateId(),
                countryCode : defaultCountry.code,
                displayName: "Semelles Enfant",
                parentType:'insoles',
                type:"insoles",
                name:'Semelles Enfant',
                description:'Semelles de pointure inférieure à 36',
                pictureId:null,
                currency:'euro',
                unitPriceVATIncl:35,
                VATPercentage:0.055,
                available:true,
                userProfile:'all',
            });
            insole3DProduct = await insert(products,{
                _id : generateId(),
                countryCode : defaultCountry.code,
                displayName: "Semelles 3D",
                parentType:'insoles',
                type:"insoles",
                name:'Semelles 3D',
                description:'Semelles sans les options de reliefs (ARC,BRC, stabilisateur...)',
                pictureId:null,
                currency:'euro',
                unitPriceVATIncl:45,
                VATPercentage:0.055,
                available:true,
                userProfile:'all',
            });
            insole3DPlusProduct = await insert(products,{
                _id : generateId(),
                countryCode : defaultCountry.code,
                displayName: "Semelles 3D+",
                parentType:'insoles',
                type:"insoles",
                name:'Semelles 3D+',
                description:'Semelles toutes options',
                pictureId:null,
                currency:'euro',
                unitPriceVATIncl:55,
                VATPercentage:0.055,
                available:true,
                userProfile:'all',

            });     
            stickProduct = await insert(products,{
                _id : generateId(),
                countryCode : defaultCountry.code,
                displayName: "Encollage",
                parentType:'insoles',
                type:"stick",
                name:'Encollage',
                description:'Encollage du recouvrement',
                pictureId:null,
                currency:'euro',
                unitPriceVATIncl:5,
                VATPercentage:0.055,
                available:true,
                userProfile:'all',
            });
            console.log("Additional covers :"+covers.length)

                await insert(products,{
                    _id : generateId(),
                    countryCode : defaultCountry.code,
                    displayName:'Aucun',
                    parentType:'insoles',
                    type:"cover",
                    name:'None',
                    pictureId:null,
                    description:"Pas de recouvrement",
                    currency:'euro',
                    unitPriceVATIncl:0,
                    VATPercentage:0,
                    available:true,
                    userProfile:'all',
                    details:
                    {
                        stickAvailable:false,
                        thickness:0
                    }
                });

            for(let i=0; i<covers.length; i++)
            {     
                var cover = covers[i];
                await insert(products,{
                    _id : generateId(),
                    countryCode : defaultCountry.code,
                    displayName:cover.name,
                    parentType:'insoles',
                    type:"cover",
                    name:cover.code,
                    pictureId:cover.imageId,
                    description:cover.description,
                    currency:'euro',
                    unitPriceVATIncl:3,
                    VATPercentage:0.055,
                    available:cover.available,
                    userProfile:'all',
                    details:
                    {
                        stickAvailable:cover.stickAvailable,
                        thickness:cover.width,
                        matter:cover.matter,
                        fabric:cover.fabric,
                    }
                });
            }
        }
//--------------------------------------------------------------------------------------------------------
  		console.log('Populating users, finalinsoes and addresses');


        await updateMany(users,{'profile.countryCode':null},{$set:{'profile.countryCode': 'FR'}});
        await updateMany(users,{'credits.euros':null},{$set:{'credits.euros': 0.}});
        await updateMany(addresses,{'countryCode':null},{$set:{'countryCode': 'FR'}});
        await updateMany(finalInsoles,{'mode':null},{$set:{'mode': 'therapeutic'}});    
        
        console.log('Exited.');
        //console.log(require('util').inspect(db));
        
    }
    catch(ex)
    {
        console.log(ex);
    }
    finally
    {    
        db.close();    
    }
})();
