var Dualbox = require('@dualbox/dualbox');
const _ = require('@dualbox/dualbox-lib-lodash');

// return all the needed functions for native array type (Int8Array, etc)
// cloning, serializing, matching json and deserializing
var generate = function( struct, arrayType ) {
    var typeName = (new arrayType()).constructor.name;

    return {
        name: typeName,

        native:true,

        jsClass:arrayType,

        desc:"Type for using javascript native array type : " + typeName,

        clone: (o) => {
            // Following code should be 50% faster on node
            //var res = new arrayType(o.length);
            //for(var i=0; i<o.length;++i){
            //    res[i] = o[i];
            //}
            //return res;
            return o.slice(0, o.length);
        },

        toJSON: (o) => {
            return {
                metadata: {
                    type: typeName
                },
                data: Array.from(o)
            }
        },

        fromJSON: (json) => {
            if(json.metadata){
                return new arrayType(json.data);
            }else{
                return new arrayType(json);
            }
        },

        matchData: (o) => {
            return o instanceof arrayType;
        }
    }
}

// add native array types
var nativeArrayTypes = [
    Int8Array, Uint8Array, Uint8ClampedArray, Int16Array,
    Uint16Array, Int32Array, Uint32Array, Float32Array, Float64Array
];
_.each(nativeArrayTypes, (nativeArrayType) => {
    var obj = new nativeArrayType();
    Dualbox.registerType(generate(Dualbox.Type, nativeArrayType));
});

module.exports = nativeArrayTypes;
